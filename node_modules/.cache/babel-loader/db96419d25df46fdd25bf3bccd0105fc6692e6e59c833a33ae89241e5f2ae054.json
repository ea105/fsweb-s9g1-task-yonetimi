{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emre\\\\workintech\\\\s9\\\\s9d1\\\\fsweb-s9g1-task-yonetimi\\\\src\\\\TaskHookForm.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { nanoid } from \"nanoid\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskHookForm = _ref => {\n  _s();\n  var _errors$people;\n  let {\n    kisiler,\n    submitFn\n  } = _ref;\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: {\n      isValid,\n      errors\n    }\n  } = useForm({\n    mode: \"onBlur\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"taskForm\",\n    onSubmit: handleSubmit(myHandleSubmit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"title\",\n        children: \"Ba\\u015Fl\\u0131k\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input-text\",\n        id: \"title\",\n        ...register(\"title\", {\n          required: \"Task başlığı yazmalısınız\",\n          minLength: {\n            value: 3,\n            message: \"Task başlığı en az 3 karakter olmalı\"\n          }\n        }),\n        type: \"text\"\n        // onChange={handleOthersChange}\n        // value={formData.title}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), errors.title && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.title.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        htmlFor: \"description\",\n        children: \"A\\xE7\\u0131klama\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"input-textarea\",\n        rows: \"3\",\n        id: \"description\",\n        ...register(\"description\", {\n          required: \"Task açıklaması yazmalısınız\",\n          minLength: {\n            value: 10,\n            message: \"Task açıklaması en az 10 karakter olmalı\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), errors.description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: errors.description.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"input-label\",\n        children: \"\\u0130nsanlar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: kisiler.map(p => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-checkbox\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            ...register(\"people\", {\n              required: \"Lütfen en az bir kişi seçin\",\n              validate: arr => arr.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\"\n            }),\n            value: p\n            // onChange={handleCheckboxChange}\n            // checked={formData.people.includes(p)}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), p]\n        }, p, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"input-error\",\n        children: (_errors$people = errors.people) === null || _errors$people === void 0 ? void 0 : _errors$people.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-line\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit-button\",\n        type: \"submit\",\n        disabled: !isValid\n        // disabled={buttonDisabled}\n        ,\n        children: \"Kaydet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskHookForm, \"akOKUJW9Y2Yt3R/qOtgDEd1NWSc=\", false, function () {\n  return [useForm];\n});\n_c = TaskHookForm;\nexport default TaskHookForm;\nvar _c;\n$RefreshReg$(_c, \"TaskHookForm\");","map":{"version":3,"names":["React","nanoid","useForm","TaskHookForm","kisiler","submitFn","register","handleSubmit","reset","formState","isValid","errors","mode","myHandleSubmit","required","minLength","value","message","title","description","map","p","validate","arr","length","people"],"sources":["C:/Users/emre/workintech/s9/s9d1/fsweb-s9g1-task-yonetimi/src/TaskHookForm.js"],"sourcesContent":["import React from 'react'\r\nimport { nanoid } from \"nanoid\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst TaskHookForm=({kisiler,submitFn})=>{\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    reset,\r\n    formState: { isValid,errors},\r\n    } = useForm({mode:\"onBlur\"});\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <form className=\"taskForm\" onSubmit={handleSubmit(myHandleSubmit)}>\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"title\">\r\n          Başlık\r\n        </label>\r\n        <input\r\n          className=\"input-text\"\r\n          id=\"title\"\r\n          {...register(\"title\", {\r\n            required: \"Task başlığı yazmalısınız\",\r\n            minLength: {\r\n              value: 3,\r\n              message: \"Task başlığı en az 3 karakter olmalı\",\r\n            },\r\n          })}\r\n          type=\"text\"\r\n          // onChange={handleOthersChange}\r\n          // value={formData.title}\r\n        />\r\n        {errors.title && <p className=\"input-error\">{errors.title.message}</p>}\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\" htmlFor=\"description\">\r\n          Açıklama\r\n        </label>\r\n        <textarea\r\n          className=\"input-textarea\"\r\n          rows=\"3\"\r\n          id=\"description\"\r\n          {...register(\"description\", {\r\n            required: \"Task açıklaması yazmalısınız\",\r\n            minLength: {\r\n              value: 10,\r\n              message: \"Task açıklaması en az 10 karakter olmalı\",\r\n            },\r\n          })}\r\n          // onChange={handleOthersChange}\r\n          // value={formData.description}\r\n        ></textarea>\r\n        {errors.description && (\r\n          <p className=\"input-error\">{errors.description.message}</p>\r\n        )}{\" \"}\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <label className=\"input-label\">İnsanlar</label>\r\n        <div>\r\n          {kisiler.map((p) => (\r\n            <label className=\"input-checkbox\" key={p}>\r\n              <input\r\n                type=\"checkbox\"\r\n                {...register(\"people\", {\r\n                  required: \"Lütfen en az bir kişi seçin\",\r\n                  validate: (arr) =>\r\n                    arr.length <= 3 || \"En fazla 3 kişi seçebilirsiniz\",\r\n                })}\r\n                value={p}\r\n                // onChange={handleCheckboxChange}\r\n                // checked={formData.people.includes(p)}\r\n              />\r\n              {p}\r\n            </label>\r\n          ))}\r\n        </div>\r\n        <p className=\"input-error\">{errors.people?.message}</p>\r\n      </div>\r\n\r\n      <div className=\"form-line\">\r\n        <button\r\n          className=\"submit-button\"\r\n          type=\"submit\"\r\n          disabled={!isValid}\r\n          // disabled={buttonDisabled}\r\n        >\r\n          Kaydet\r\n        </button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n  export default TaskHookForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}